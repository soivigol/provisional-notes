{"ast":null,"code":"const STORAGE_KEY='provisional-notes';const CLEANUP_DAYS=7;// Days after which notes are automatically deleted\nexport const loadNotes=()=>{try{const stored=localStorage.getItem(STORAGE_KEY);const notes=stored?JSON.parse(stored):[];// Auto-cleanup notes older than 7 days\nconst cleanedNotes=cleanupOldNotes(notes);// Save cleaned notes back if any were removed\nif(cleanedNotes.length!==notes.length){saveNotes(cleanedNotes);}return cleanedNotes;}catch(error){console.error('Error loading notes:',error);return[];}};const cleanupOldNotes=notes=>{const sevenDaysAgo=Date.now()-CLEANUP_DAYS*24*60*60*1000;return notes.filter(note=>{// Keep notes that are newer than 7 days based on updatedAt timestamp\nreturn note.updatedAt>sevenDaysAgo;});};export const saveNotes=notes=>{try{localStorage.setItem(STORAGE_KEY,JSON.stringify(notes));}catch(error){console.error('Error saving notes:',error);}};export const generateId=()=>{return Date.now().toString(36)+Math.random().toString(36).substring(2);};export const formatDate=timestamp=>{return new Date(timestamp).toLocaleDateString('en-US',{year:'numeric',month:'short',day:'numeric',hour:'2-digit',minute:'2-digit'});};","map":{"version":3,"names":["STORAGE_KEY","CLEANUP_DAYS","loadNotes","stored","localStorage","getItem","notes","JSON","parse","cleanedNotes","cleanupOldNotes","length","saveNotes","error","console","sevenDaysAgo","Date","now","filter","note","updatedAt","setItem","stringify","generateId","toString","Math","random","substring","formatDate","timestamp","toLocaleDateString","year","month","day","hour","minute"],"sources":["/Users/david/provisional-notes/src/utils/storage.js"],"sourcesContent":["const STORAGE_KEY = 'provisional-notes';\nconst CLEANUP_DAYS = 7; // Days after which notes are automatically deleted\n\nexport const loadNotes = () => {\n  try {\n    const stored = localStorage.getItem(STORAGE_KEY);\n    const notes = stored ? JSON.parse(stored) : [];\n    \n    // Auto-cleanup notes older than 7 days\n    const cleanedNotes = cleanupOldNotes(notes);\n    \n    // Save cleaned notes back if any were removed\n    if (cleanedNotes.length !== notes.length) {\n      saveNotes(cleanedNotes);\n    }\n    \n    return cleanedNotes;\n  } catch (error) {\n    console.error('Error loading notes:', error);\n    return [];\n  }\n};\n\nconst cleanupOldNotes = (notes) => {\n  const sevenDaysAgo = Date.now() - (CLEANUP_DAYS * 24 * 60 * 60 * 1000);\n  \n  return notes.filter(note => {\n    // Keep notes that are newer than 7 days based on updatedAt timestamp\n    return note.updatedAt > sevenDaysAgo;\n  });\n};\n\nexport const saveNotes = (notes) => {\n  try {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(notes));\n  } catch (error) {\n    console.error('Error saving notes:', error);\n  }\n};\n\nexport const generateId = () => {\n  return Date.now().toString(36) + Math.random().toString(36).substring(2);\n};\n\nexport const formatDate = (timestamp) => {\n  return new Date(timestamp).toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n};"],"mappings":"AAAA,KAAM,CAAAA,WAAW,CAAG,mBAAmB,CACvC,KAAM,CAAAC,YAAY,CAAG,CAAC,CAAE;AAExB,MAAO,MAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,CAC7B,GAAI,CACF,KAAM,CAAAC,MAAM,CAAGC,YAAY,CAACC,OAAO,CAACL,WAAW,CAAC,CAChD,KAAM,CAAAM,KAAK,CAAGH,MAAM,CAAGI,IAAI,CAACC,KAAK,CAACL,MAAM,CAAC,CAAG,EAAE,CAE9C;AACA,KAAM,CAAAM,YAAY,CAAGC,eAAe,CAACJ,KAAK,CAAC,CAE3C;AACA,GAAIG,YAAY,CAACE,MAAM,GAAKL,KAAK,CAACK,MAAM,CAAE,CACxCC,SAAS,CAACH,YAAY,CAAC,CACzB,CAEA,MAAO,CAAAA,YAAY,CACrB,CAAE,MAAOI,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC5C,MAAO,EAAE,CACX,CACF,CAAC,CAED,KAAM,CAAAH,eAAe,CAAIJ,KAAK,EAAK,CACjC,KAAM,CAAAS,YAAY,CAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAIhB,YAAY,CAAG,EAAE,CAAG,EAAE,CAAG,EAAE,CAAG,IAAK,CAEtE,MAAO,CAAAK,KAAK,CAACY,MAAM,CAACC,IAAI,EAAI,CAC1B;AACA,MAAO,CAAAA,IAAI,CAACC,SAAS,CAAGL,YAAY,CACtC,CAAC,CAAC,CACJ,CAAC,CAED,MAAO,MAAM,CAAAH,SAAS,CAAIN,KAAK,EAAK,CAClC,GAAI,CACFF,YAAY,CAACiB,OAAO,CAACrB,WAAW,CAAEO,IAAI,CAACe,SAAS,CAAChB,KAAK,CAAC,CAAC,CAC1D,CAAE,MAAOO,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,CAAEA,KAAK,CAAC,CAC7C,CACF,CAAC,CAED,MAAO,MAAM,CAAAU,UAAU,CAAGA,CAAA,GAAM,CAC9B,MAAO,CAAAP,IAAI,CAACC,GAAG,CAAC,CAAC,CAACO,QAAQ,CAAC,EAAE,CAAC,CAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACF,QAAQ,CAAC,EAAE,CAAC,CAACG,SAAS,CAAC,CAAC,CAAC,CAC1E,CAAC,CAED,MAAO,MAAM,CAAAC,UAAU,CAAIC,SAAS,EAAK,CACvC,MAAO,IAAI,CAAAb,IAAI,CAACa,SAAS,CAAC,CAACC,kBAAkB,CAAC,OAAO,CAAE,CACrDC,IAAI,CAAE,SAAS,CACfC,KAAK,CAAE,OAAO,CACdC,GAAG,CAAE,SAAS,CACdC,IAAI,CAAE,SAAS,CACfC,MAAM,CAAE,SACV,CAAC,CAAC,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}